from urllib.parse import urlsplit


def get(category, feature):
    switch = {
        'feature': extract_feature,
        'permission': extract_permission,
        'activity': extract_activity,
        'service_receiver': extract_service_receiver,
        'provider': extract_provider,
        'service': extract_service,
        'intent': extract_intent,
        'api_call': extract_api_call,
        'real_permission': extract_permission,
        'call': extract_call,
        'url': extract_url
    }
    return switch[category](feature)


def extract_url(string):
    try:
        base_url = "{0.scheme}://{0.netloc}/".format(urlsplit(string))
        if len(base_url) > 10:
            return base_url
    except:
        return None


# Extract api_call
def extract_api_call(string):
    try:
        string = string.replace(';->', '/')
        return string.lower()
    except:
        return None


# Extract feature
def extract_feature(string):
    try:
        feature = string.split('.')[-1].lower()
        return feature
    except:
        return None


# Extract permission and real_permission
def extract_permission(string):
    try:
        permission = string.split('.')[-1].lower()
        return permission
    except:
        return None


# Extract call
def extract_call(string):
    try:
        call = string.lower()
        return call
    except:
        return None


# Extract activity
def extract_activity(string):
    try:
        activity = string.split('.')[-1].lower()
        return activity
    except:
        return None


# Extract intent
def extract_intent(string):
    try:
        intent = string.split('.')[-1].lower()
        return intent
    except:
        return None


# Extract service_receiver
def extract_service_receiver(string):
    try:
        service_receiver = string.split('.')[-1].lower()
        return service_receiver
    except:
        return None


# Extract service_receiver
def extract_service(string):
    try:
        return string.lower()
    except:
        return None


# Extract provider
def extract_provider(string):
    try:
        provider = string.split('.')[-1].lower()
        return provider
    except:
        return None
